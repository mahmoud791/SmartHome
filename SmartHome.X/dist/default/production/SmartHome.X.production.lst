

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jun 14 19:25:58 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Version 2.40
    23                           ; Generated 17/11/2021 GMT
    24                           ; 
    25                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4620 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	idataCOMRAM
    59   0000B2                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _port_registers
    63   0000B2  80                 	db	128
    64   0000B3  0F                 	db	15
    65   0000B4  81                 	db	129
    66   0000B5  0F                 	db	15
    67   0000B6  82                 	db	130
    68   0000B7  0F                 	db	15
    69   0000B8  83                 	db	131
    70   0000B9  0F                 	db	15
    71   0000BA  84                 	db	132
    72   0000BB  0F                 	db	15
    73                           
    74                           ;initializer for _lat_registers
    75   0000BC  89                 	db	137
    76   0000BD  0F                 	db	15
    77   0000BE  8A                 	db	138
    78   0000BF  0F                 	db	15
    79   0000C0  8B                 	db	139
    80   0000C1  0F                 	db	15
    81   0000C2  8C                 	db	140
    82   0000C3  0F                 	db	15
    83   0000C4  8D                 	db	141
    84   0000C5  0F                 	db	15
    85                           
    86                           ;initializer for _tris_registers
    87   0000C6  92                 	db	146
    88   0000C7  0F                 	db	15
    89   0000C8  93                 	db	147
    90   0000C9  0F                 	db	15
    91   0000CA  94                 	db	148
    92   0000CB  0F                 	db	15
    93   0000CC  95                 	db	149
    94   0000CD  0F                 	db	15
    95   0000CE  96                 	db	150
    96   0000CF  0F                 	db	15
    97                           
    98                           ;initializer for _int2_pin
    99   0000D0  51                 	db	81
   100                           
   101                           ;initializer for _int1_pin
   102   0000D1  49                 	db	73
   103                           
   104                           ;initializer for _int0_pin
   105   0000D2  41                 	db	65
   106   000000                     _PORTE	set	3972
   107   000000                     _PORTD	set	3971
   108   000000                     _PORTC	set	3970
   109   000000                     _PORTB	set	3969
   110   000000                     _PORTA	set	3968
   111   000000                     _LATA	set	3977
   112   000000                     _TRISA	set	3986
   113   000000                     _INTCON3bits	set	4080
   114   000000                     _INTCON2bits	set	4081
   115   000000                     _INTCONbits	set	4082
   116   000000                     _TRISE	set	3990
   117   000000                     _TRISD	set	3989
   118   000000                     _TRISC	set	3988
   119   000000                     _TRISB	set	3987
   120   000000                     _LATE	set	3981
   121   000000                     _LATD	set	3980
   122   000000                     _LATC	set	3979
   123   000000                     _LATB	set	3978
   124                           
   125                           ; #config settings
   126                           
   127                           	psect	cinit
   128   000078                     __pcinit:
   129                           	callstack 0
   130   000078                     start_initialization:
   131                           	callstack 0
   132   000078                     __initialization:
   133                           	callstack 0
   134                           
   135                           ; Initialize objects allocated to COMRAM (33 bytes)
   136                           ; load TBLPTR registers with __pidataCOMRAM
   137   000078  0EB2               	movlw	low __pidataCOMRAM
   138   00007A  6EF6               	movwf	tblptrl,c
   139   00007C  0E00               	movlw	high __pidataCOMRAM
   140   00007E  6EF7               	movwf	tblptrh,c
   141   000080  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   142   000082  6EF8               	movwf	tblptru,c
   143   000084  EE00  F001         	lfsr	0,__pdataCOMRAM
   144   000088  EE10 F021          	lfsr	1,33
   145   00008C                     copy_data0:
   146   00008C  0009               	tblrd		*+
   147   00008E  CFF5 FFEE          	movff	tablat,postinc0
   148   000092  50E5               	movf	postdec1,w,c
   149   000094  50E1               	movf	fsr1l,w,c
   150   000096  E1FA               	bnz	copy_data0
   151                           
   152                           ; Clear objects allocated to COMRAM (6 bytes)
   153   000098  6A27               	clrf	(__pbssCOMRAM+5)& (0+255),c
   154   00009A  6A26               	clrf	(__pbssCOMRAM+4)& (0+255),c
   155   00009C  6A25               	clrf	(__pbssCOMRAM+3)& (0+255),c
   156   00009E  6A24               	clrf	(__pbssCOMRAM+2)& (0+255),c
   157   0000A0  6A23               	clrf	(__pbssCOMRAM+1)& (0+255),c
   158   0000A2  6A22               	clrf	__pbssCOMRAM& (0+255),c
   159   0000A4                     end_of_initialization:
   160                           	callstack 0
   161   0000A4                     __end_of__initialization:
   162                           	callstack 0
   163   0000A4  9028               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   164   0000A6  9228               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   165   0000A8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   166   0000AA  6EF8               	movwf	tblptru,c
   167   0000AC  0100               	movlb	0
   168   0000AE  EF6A  F000         	goto	_main	;jump to C main() function
   169                           
   170                           	psect	bssCOMRAM
   171   000022                     __pbssCOMRAM:
   172                           	callstack 0
   173   000022                     _InterruptHandler_INT2:
   174                           	callstack 0
   175   000022                     	ds	2
   176   000024                     _InterruptHandler_INT1:
   177                           	callstack 0
   178   000024                     	ds	2
   179   000026                     _InterruptHandler_INT0:
   180                           	callstack 0
   181   000026                     	ds	2
   182                           
   183                           	psect	dataCOMRAM
   184   000001                     __pdataCOMRAM:
   185                           	callstack 0
   186   000001                     _port_registers:
   187                           	callstack 0
   188   000001                     	ds	10
   189   00000B                     _lat_registers:
   190                           	callstack 0
   191   00000B                     	ds	10
   192   000015                     _tris_registers:
   193                           	callstack 0
   194   000015                     	ds	10
   195   00001F                     _int2_pin:
   196                           	callstack 0
   197   00001F                     	ds	1
   198   000020                     _int1_pin:
   199                           	callstack 0
   200   000020                     	ds	1
   201   000021                     _int0_pin:
   202                           	callstack 0
   203   000021                     	ds	1
   204                           
   205                           	psect	cstackCOMRAM
   206   000000                     __pcstackCOMRAM:
   207                           	callstack 0
   208   000000                     
   209                           ; 1 bytes @ 0x0
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 18 in file "App_layer/Application.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		None
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   233 ;;Total ram usage:        0 bytes
   234 ;; Hardware stack levels required when called: 2
   235 ;; This function calls:
   236 ;;		Nothing
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242                           	psect	text0
   243   0000D4                     __ptext0:
   244                           	callstack 0
   245   0000D4                     _main:
   246                           	callstack 29
   247   0000D4  EF07  F000         	goto	start
   248   0000D8                     __end_of_main:
   249                           	callstack 0
   250                           
   251 ;; *************** function _InterruptManager *****************
   252 ;; Defined at:
   253 ;;		line 47 in file "MCAL/Interrupts/MCAL_interrupt_manager.c"
   254 ;; Parameters:    Size  Location     Type
   255 ;;		None
   256 ;; Auto vars:     Size  Location     Type
   257 ;;		None
   258 ;; Return value:  Size  Location     Type
   259 ;;                  1    wreg      void 
   260 ;; Registers used:
   261 ;;		cstack
   262 ;; Tracked objects:
   263 ;;		On entry : 0/0
   264 ;;		On exit  : 0/0
   265 ;;		Unchanged: 0/0
   266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   271 ;;Total ram usage:        0 bytes
   272 ;; Hardware stack levels used: 1
   273 ;; Hardware stack levels required when called: 1
   274 ;; This function calls:
   275 ;;		_ISR_INT0
   276 ;;		_ISR_INT1
   277 ;;		_ISR_INT2
   278 ;; This function is called by:
   279 ;;		Interrupt level 2
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	intcode
   284   000008                     __pintcode:
   285                           	callstack 0
   286   000008                     _InterruptManager:
   287                           	callstack 29
   288                           
   289                           ;incstack = 0
   290   000008  8228               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   291   00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   292                           
   293                           	psect	intcode_body
   294   000012                     __pintcode_body:
   295                           	callstack 29
   296   000012                     int_func:
   297                           	callstack 29
   298   000012  0006               	pop		; remove dummy address from shadow register refresh
   299   000014                     
   300                           ;MCAL/Interrupts/MCAL_interrupt_manager.c: 49:     if((INTCONbits.INT0IE == 1) && (INTCO
      +                          Nbits.INT0IF == 1)){
   301   000014  A8F2               	btfss	242,4,c	;volatile
   302   000016  EF0F  F000         	goto	i2u34_41
   303   00001A  EF11  F000         	goto	i2u34_40
   304   00001E                     i2u34_41:
   305   00001E  EF1A  F000         	goto	i2l181
   306   000022                     i2u34_40:
   307   000022  A2F2               	btfss	242,1,c	;volatile
   308   000024  EF16  F000         	goto	i2u35_41
   309   000028  EF18  F000         	goto	i2u35_40
   310   00002C                     i2u35_41:
   311   00002C  EF1A  F000         	goto	i2l181
   312   000030                     i2u35_40:
   313   000030                     
   314                           ;MCAL/Interrupts/MCAL_interrupt_manager.c: 50:         ISR_INT0();
   315   000030  EC70  F000         	call	_ISR_INT0	;wreg free
   316   000034                     i2l181:
   317                           
   318                           ;MCAL/Interrupts/MCAL_interrupt_manager.c: 55:     if((INTCON3bits.INT1IE == 1) && (INTC
      +                          ON3bits.INT1IF == 1)){
   319   000034  A6F0               	btfss	240,3,c	;volatile
   320   000036  EF1F  F000         	goto	i2u36_41
   321   00003A  EF21  F000         	goto	i2u36_40
   322   00003E                     i2u36_41:
   323   00003E  EF2A  F000         	goto	i2l183
   324   000042                     i2u36_40:
   325   000042  A0F0               	btfss	240,0,c	;volatile
   326   000044  EF26  F000         	goto	i2u37_41
   327   000048  EF28  F000         	goto	i2u37_40
   328   00004C                     i2u37_41:
   329   00004C  EF2A  F000         	goto	i2l183
   330   000050                     i2u37_40:
   331   000050                     
   332                           ;MCAL/Interrupts/MCAL_interrupt_manager.c: 56:         ISR_INT1();
   333   000050  EC6E  F000         	call	_ISR_INT1	;wreg free
   334   000054                     i2l183:
   335                           
   336                           ;MCAL/Interrupts/MCAL_interrupt_manager.c: 60:     if((INTCON3bits.INT2IE == 1) && (INTC
      +                          ON3bits.INT2IF == 1)){
   337   000054  A8F0               	btfss	240,4,c	;volatile
   338   000056  EF2F  F000         	goto	i2u38_41
   339   00005A  EF31  F000         	goto	i2u38_40
   340   00005E                     i2u38_41:
   341   00005E  EF3A  F000         	goto	i2l186
   342   000062                     i2u38_40:
   343   000062  A2F0               	btfss	240,1,c	;volatile
   344   000064  EF36  F000         	goto	i2u39_41
   345   000068  EF38  F000         	goto	i2u39_40
   346   00006C                     i2u39_41:
   347   00006C  EF3A  F000         	goto	i2l186
   348   000070                     i2u39_40:
   349   000070                     
   350                           ;MCAL/Interrupts/MCAL_interrupt_manager.c: 61:         ISR_INT2();
   351   000070  EC6C  F000         	call	_ISR_INT2	;wreg free
   352   000074                     i2l186:
   353   000074  9228               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   354   000076  0011               	retfie		f
   355   000078                     __end_of_InterruptManager:
   356                           	callstack 0
   357                           
   358 ;; *************** function _ISR_INT2 *****************
   359 ;; Defined at:
   360 ;;		line 214 in file "MCAL/Interrupts/MCAL_Interrupts_external.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		None
   369 ;; Tracked objects:
   370 ;;		On entry : 0/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   378 ;;Total ram usage:        0 bytes
   379 ;; Hardware stack levels used: 1
   380 ;; This function calls:
   381 ;;		Nothing
   382 ;; This function is called by:
   383 ;;		_InterruptManager
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           	psect	text2
   388   0000D8                     __ptext2:
   389                           	callstack 0
   390   0000D8                     _ISR_INT2:
   391                           	callstack 29
   392   0000D8                     
   393                           ;MCAL/Interrupts/MCAL_Interrupts_external.c: 216:     INTCON3bits.INT2IF=0;
   394   0000D8  92F0               	bcf	240,1,c	;volatile
   395   0000DA  0012               	return		;funcret
   396   0000DC                     __end_of_ISR_INT2:
   397                           	callstack 0
   398                           
   399 ;; *************** function _ISR_INT1 *****************
   400 ;; Defined at:
   401 ;;		line 201 in file "MCAL/Interrupts/MCAL_Interrupts_external.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		None
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;Total ram usage:        0 bytes
   420 ;; Hardware stack levels used: 1
   421 ;; This function calls:
   422 ;;		Nothing
   423 ;; This function is called by:
   424 ;;		_InterruptManager
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text3
   429   0000DC                     __ptext3:
   430                           	callstack 0
   431   0000DC                     _ISR_INT1:
   432                           	callstack 29
   433   0000DC                     
   434                           ;MCAL/Interrupts/MCAL_Interrupts_external.c: 203:     INTCON3bits.INT1IF=0;
   435   0000DC  90F0               	bcf	240,0,c	;volatile
   436   0000DE  0012               	return		;funcret
   437   0000E0                     __end_of_ISR_INT1:
   438                           	callstack 0
   439                           
   440 ;; *************** function _ISR_INT0 *****************
   441 ;; Defined at:
   442 ;;		line 189 in file "MCAL/Interrupts/MCAL_Interrupts_external.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;		None
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		None
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;Total ram usage:        0 bytes
   461 ;; Hardware stack levels used: 1
   462 ;; This function calls:
   463 ;;		Nothing
   464 ;; This function is called by:
   465 ;;		_InterruptManager
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text4
   470   0000E0                     __ptext4:
   471                           	callstack 0
   472   0000E0                     _ISR_INT0:
   473                           	callstack 29
   474   0000E0                     
   475                           ;MCAL/Interrupts/MCAL_Interrupts_external.c: 191:     INTCONbits.INT0IF = 0;
   476   0000E0  92F2               	bcf	242,1,c	;volatile
   477   0000E2  0012               	return		;funcret
   478   0000E4                     __end_of_ISR_INT0:
   479                           	callstack 0
   480   000000                     
   481                           	psect	rparam
   482   000000                     
   483                           	psect	temp
   484   000028                     btemp:
   485                           	callstack 0
   486   000028                     	ds	1
   487   000000                     int$flags	set	btemp
   488   000000                     wtemp8	set	btemp+1
   489   000000                     ttemp5	set	btemp+1
   490   000000                     ttemp6	set	btemp+4
   491   000000                     ttemp7	set	btemp+8
   492                           
   493                           	psect	idloc
   494                           
   495                           ;Config register IDLOC0 @ 0x200000
   496                           ;	unspecified, using default values
   497   200000                     	org	2097152
   498   200000  FF                 	db	255
   499                           
   500                           ;Config register IDLOC1 @ 0x200001
   501                           ;	unspecified, using default values
   502   200001                     	org	2097153
   503   200001  FF                 	db	255
   504                           
   505                           ;Config register IDLOC2 @ 0x200002
   506                           ;	unspecified, using default values
   507   200002                     	org	2097154
   508   200002  FF                 	db	255
   509                           
   510                           ;Config register IDLOC3 @ 0x200003
   511                           ;	unspecified, using default values
   512   200003                     	org	2097155
   513   200003  FF                 	db	255
   514                           
   515                           ;Config register IDLOC4 @ 0x200004
   516                           ;	unspecified, using default values
   517   200004                     	org	2097156
   518   200004  FF                 	db	255
   519                           
   520                           ;Config register IDLOC5 @ 0x200005
   521                           ;	unspecified, using default values
   522   200005                     	org	2097157
   523   200005  FF                 	db	255
   524                           
   525                           ;Config register IDLOC6 @ 0x200006
   526                           ;	unspecified, using default values
   527   200006                     	org	2097158
   528   200006  FF                 	db	255
   529                           
   530                           ;Config register IDLOC7 @ 0x200007
   531                           ;	unspecified, using default values
   532   200007                     	org	2097159
   533   200007  FF                 	db	255
   534                           
   535                           	psect	config
   536                           
   537                           ; Padding undefined space
   538   300000                     	org	3145728
   539   300000  FF                 	db	255
   540                           
   541                           ;Config register CONFIG1H @ 0x300001
   542                           ;	Oscillator Selection bits
   543                           ;	OSC = HS, HS oscillator
   544                           ;	Fail-Safe Clock Monitor Enable bit
   545                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   546                           ;	Internal/External Oscillator Switchover bit
   547                           ;	IESO = OFF, Oscillator Switchover mode disabled
   548   300001                     	org	3145729
   549   300001  02                 	db	2
   550                           
   551                           ;Config register CONFIG2L @ 0x300002
   552                           ;	Power-up Timer Enable bit
   553                           ;	PWRT = OFF, PWRT disabled
   554                           ;	Brown-out Reset Enable bits
   555                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   556                           ;	Brown Out Reset Voltage bits
   557                           ;	BORV = 3, Minimum setting
   558   300002                     	org	3145730
   559   300002  1F                 	db	31
   560                           
   561                           ;Config register CONFIG2H @ 0x300003
   562                           ;	Watchdog Timer Enable bit
   563                           ;	WDT = ON, WDT enabled
   564                           ;	Watchdog Timer Postscale Select bits
   565                           ;	WDTPS = 32768, 1:32768
   566   300003                     	org	3145731
   567   300003  1F                 	db	31
   568                           
   569                           ; Padding undefined space
   570   300004                     	org	3145732
   571   300004  FF                 	db	255
   572                           
   573                           ;Config register CONFIG3H @ 0x300005
   574                           ;	CCP2 MUX bit
   575                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   576                           ;	PORTB A/D Enable bit
   577                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   578                           ;	Low-Power Timer1 Oscillator Enable bit
   579                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   580                           ;	MCLR Pin Enable bit
   581                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   582   300005                     	org	3145733
   583   300005  81                 	db	129
   584                           
   585                           ;Config register CONFIG4L @ 0x300006
   586                           ;	Stack Full/Underflow Reset Enable bit
   587                           ;	STVREN = ON, Stack full/underflow will cause Reset
   588                           ;	Single-Supply ICSP Enable bit
   589                           ;	LVP = ON, Single-Supply ICSP enabled
   590                           ;	Extended Instruction Set Enable bit
   591                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   592                           ;	Background Debugger Enable bit
   593                           ;	DEBUG = 0x1, unprogrammed default
   594   300006                     	org	3145734
   595   300006  85                 	db	133
   596                           
   597                           ; Padding undefined space
   598   300007                     	org	3145735
   599   300007  FF                 	db	255
   600                           
   601                           ;Config register CONFIG5L @ 0x300008
   602                           ;	Code Protection bit
   603                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   604                           ;	Code Protection bit
   605                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   606                           ;	Code Protection bit
   607                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   608                           ;	Code Protection bit
   609                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   610   300008                     	org	3145736
   611   300008  0F                 	db	15
   612                           
   613                           ;Config register CONFIG5H @ 0x300009
   614                           ;	Boot Block Code Protection bit
   615                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   616                           ;	Data EEPROM Code Protection bit
   617                           ;	CPD = OFF, Data EEPROM not code-protected
   618   300009                     	org	3145737
   619   300009  C0                 	db	192
   620                           
   621                           ;Config register CONFIG6L @ 0x30000A
   622                           ;	Write Protection bit
   623                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   624                           ;	Write Protection bit
   625                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   626                           ;	Write Protection bit
   627                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   628                           ;	Write Protection bit
   629                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   630   30000A                     	org	3145738
   631   30000A  0F                 	db	15
   632                           
   633                           ;Config register CONFIG6H @ 0x30000B
   634                           ;	Configuration Register Write Protection bit
   635                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   636                           ;	Boot Block Write Protection bit
   637                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   638                           ;	Data EEPROM Write Protection bit
   639                           ;	WRTD = OFF, Data EEPROM not write-protected
   640   30000B                     	org	3145739
   641   30000B  E0                 	db	224
   642                           
   643                           ;Config register CONFIG7L @ 0x30000C
   644                           ;	Table Read Protection bit
   645                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   646                           ;	Table Read Protection bit
   647                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   648                           ;	Table Read Protection bit
   649                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   650                           ;	Table Read Protection bit
   651                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   652   30000C                     	org	3145740
   653   30000C  0F                 	db	15
   654                           
   655                           ;Config register CONFIG7H @ 0x30000D
   656                           ;	Boot Block Table Read Protection bit
   657                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   658   30000D                     	org	3145741
   659   30000D  40                 	db	64
   660                           tosu	equ	0xFFF
   661                           tosh	equ	0xFFE
   662                           tosl	equ	0xFFD
   663                           stkptr	equ	0xFFC
   664                           pclatu	equ	0xFFB
   665                           pclath	equ	0xFFA
   666                           pcl	equ	0xFF9
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           prodh	equ	0xFF4
   672                           prodl	equ	0xFF3
   673                           indf0	equ	0xFEF
   674                           postinc0	equ	0xFEE
   675                           postdec0	equ	0xFED
   676                           preinc0	equ	0xFEC
   677                           plusw0	equ	0xFEB
   678                           fsr0h	equ	0xFEA
   679                           fsr0l	equ	0xFE9
   680                           wreg	equ	0xFE8
   681                           indf1	equ	0xFE7
   682                           postinc1	equ	0xFE6
   683                           postdec1	equ	0xFE5
   684                           preinc1	equ	0xFE4
   685                           plusw1	equ	0xFE3
   686                           fsr1h	equ	0xFE2
   687                           fsr1l	equ	0xFE1
   688                           bsr	equ	0xFE0
   689                           indf2	equ	0xFDF
   690                           postinc2	equ	0xFDE
   691                           postdec2	equ	0xFDD
   692                           preinc2	equ	0xFDC
   693                           plusw2	equ	0xFDB
   694                           fsr2h	equ	0xFDA
   695                           fsr2l	equ	0xFD9
   696                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      0      39
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    InterruptHandler_INT2	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Init_Ext_INT2@int2_obj.interrupt_handler	PTR FTN()void  size(2) Largest target is 0

    InterruptHandler_INT1	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S259$interrupt_handler	PTR FTN()void  size(2) Largest target is 0

    Init_Ext_INT1@int1_obj.interrupt_handler	PTR FTN()void  size(2) Largest target is 0

    InterruptHandler_INT0	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S167$interrupt_handler	PTR FTN()void  size(2) Largest target is 0

    Init_Ext_INT0@int0_obj.interrupt_handler	PTR FTN()void  size(2) Largest target is 0

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhl[1]), TRISD(BITBIGSFRhl[1]), TRISC(BITBIGSFRhl[1]), TRISB(BITBIGSFRhl[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _InterruptManager                                     0     0      0       0
                           _ISR_INT0
                           _ISR_INT1
                           _ISR_INT2
 ---------------------------------------------------------------------------------
 (2) _ISR_INT2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ISR_INT1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ISR_INT0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _InterruptManager (ROOT)
   _ISR_INT0
   _ISR_INT1
   _ISR_INT2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      0      27       1       31.0%
BITBIGSFRhl         59      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRlh          4      0       0      39        0.0%
BITBIGSFRll          4      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27      26        0.0%
DATA                 0      0      27       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jun 14 19:25:58 2023

      ??_InterruptManager 0000                         l5 00D4                      _LATA 0F89  
                    _LATB 0F8A                      _LATC 0F8B                      _LATD 0F8C  
                    _LATE 0F8D                      _main 00D4                      fsr1l 0FE1  
                    btemp 0028                      start 000E              ___param_bank 0000  
                   ?_main 0000                     i2l161 00DE                     i2l157 00E2  
                   i2l165 00DA                     i2l181 0034                     i2l183 0054  
                   i2l186 0074                     i2l910 00E0                     i2l914 00DC  
                   i2l918 00D8                     _PORTA 0F80                     _PORTB 0F81  
                   _PORTC 0F82                     _PORTD 0F83                     _PORTE 0F84  
        __end_of_ISR_INT0 00E4          __end_of_ISR_INT1 00E0          __end_of_ISR_INT2 00DC  
                   _TRISA 0F92                     _TRISB 0F93                     _TRISC 0F94  
                   _TRISD 0F95                     _TRISE 0F96                     tablat 0FF5  
                   ttemp5 0029                     ttemp6 002C                     ttemp7 0030  
                   wtemp8 0029           __initialization 0078              __end_of_main 00D8  
           _lat_registers 000B                    ??_main 0000             __activetblptr 0002  
                  i2l1090 0050                    i2l1082 0014                    i2l1092 0062  
                  i2l1084 0022                    i2l1094 0070                    i2l1086 0030  
                  i2l1088 0042                    isa$std 0001              __pdataCOMRAM 0001  
                  tblptrh 0FF7                    tblptrl 0FF6                    tblptru 0FF8  
              __accesstop 0080   __end_of__initialization 00A4             ___rparam_used 0001  
               ?_ISR_INT0 0000                 ?_ISR_INT1 0000                 ?_ISR_INT2 0000  
          __pcstackCOMRAM 0000                ??_ISR_INT0 0000                ??_ISR_INT1 0000  
              ??_ISR_INT2 0000                   i2u34_40 0022                   i2u34_41 001E  
                 i2u35_40 0030                   i2u35_41 002C                   i2u36_40 0042  
                 i2u36_41 003E                   i2u37_40 0050                   i2u37_41 004C  
                 i2u38_40 0062                   i2u38_41 005E                   i2u39_40 0070  
                 i2u39_41 006C            _tris_registers 0015                   __Hparam 0000  
                 __Lparam 0000                   __pcinit 0078                   __ramtop 1000  
                 __ptext0 00D4                   __ptext2 00D8                   __ptext3 00DC  
                 __ptext4 00E0            __pintcode_body 0012      end_of_initialization 00A4  
           __Lmediumconst 0000                   int_func 0012                   postdec1 0FE5  
                 postinc0 0FEE          _InterruptManager 0008     _InterruptHandler_INT0 0026  
   _InterruptHandler_INT1 0024     _InterruptHandler_INT2 0022             __pidataCOMRAM 00B2  
     start_initialization 0078               __pbssCOMRAM 0022                 __pintcode 0008  
__end_of_InterruptManager 0078                  _ISR_INT0 00E0                  _ISR_INT1 00DC  
                _ISR_INT2 00D8               _INTCON2bits 0FF1               _INTCON3bits 0FF0  
               copy_data0 008C                  __Hrparam 0000                  __Lrparam 0000  
                _int0_pin 0021                  _int1_pin 0020                  _int2_pin 001F  
                isa$xinst 0000                  int$flags 0028                _INTCONbits 0FF2  
                intlevel2 0000            _port_registers 0001         ?_InterruptManager 0000  
